// <auto-generated />
using System;
using DeanarySoft.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DeanarySoft.Migrations
{
    [DbContext(typeof(DeanaryContext))]
    [Migration("20240415144223_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeanarySoft.DataLayer.Contactphone", b =>
                {
                    b.Property<int>("Contact")
                        .HasColumnType("integer")
                        .HasColumnName("contact");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer")
                        .HasColumnName("staff_id");

                    b.HasKey("Contact", "StaffId")
                        .HasName("contactphones_pkey");

                    b.HasIndex("StaffId");

                    b.ToTable("contactphones", "deanary");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("equipment_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EquipmentId"));

                    b.Property<DateOnly>("CommissioningDate")
                        .HasColumnType("date")
                        .HasColumnName("commissioning_date");

                    b.Property<DateOnly>("DeadlinePeriod")
                        .HasColumnType("date")
                        .HasColumnName("deadline_period");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("ModelId")
                        .HasColumnType("integer")
                        .HasColumnName("model_id");

                    b.HasKey("EquipmentId")
                        .HasName("equipment_pkey");

                    b.HasIndex("ModelId");

                    b.ToTable("equipment", "deanary");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Fullrequestinformation", b =>
                {
                    b.Property<int?>("IdОборудования")
                        .HasColumnType("integer")
                        .HasColumnName("ID оборудования");

                    b.Property<int?>("IdСотрудника")
                        .HasColumnType("integer")
                        .HasColumnName("ID сотрудника");

                    b.Property<DateOnly?>("ДатаВводаВЭксплуотацию")
                        .HasColumnType("date")
                        .HasColumnName("Дата ввода в эксплуотацию");

                    b.Property<DateOnly?>("ДатаВозврата")
                        .HasColumnType("date")
                        .HasColumnName("Дата возврата");

                    b.Property<DateOnly?>("ДатаВыдачи")
                        .HasColumnType("date")
                        .HasColumnName("Дата выдачи");

                    b.Property<string>("Кафедра")
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("Модель")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("Номер")
                        .HasColumnType("integer");

                    b.Property<string>("Производитель")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ТипОборудования")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Тип оборудования");

                    b.Property<short?>("УровеньДоступа")
                        .HasColumnType("smallint")
                        .HasColumnName("Уровень доступа");

                    b.Property<short?>("УровеньДоступаОборудования")
                        .HasColumnType("smallint")
                        .HasColumnName("Уровень доступа оборудования");

                    b.Property<string>("ФиСотрудника")
                        .HasColumnType("text")
                        .HasColumnName("ФИ сотрудника");

                    b.ToTable((string)null);

                    b.ToView("fullrequestinformation", "deanary");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Model", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("model_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ModelId"));

                    b.Property<short?>("AccessLevel")
                        .HasColumnType("smallint")
                        .HasColumnName("access_level");

                    b.Property<string>("EquipmentType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("equipment_type");

                    b.Property<string>("Manufactor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("manufactor");

                    b.Property<string>("Model1")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("model");

                    b.HasKey("ModelId")
                        .HasName("models_pkey");

                    b.ToTable("models", "deanary");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Request", b =>
                {
                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer")
                        .HasColumnName("equipment_id");

                    b.Property<DateOnly?>("ReturnDate")
                        .HasColumnType("date")
                        .HasColumnName("return_date");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer")
                        .HasColumnName("staff_id");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("StaffId");

                    b.ToTable("requests", "deanary");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("staff_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StaffId"));

                    b.Property<short>("AccessLevel")
                        .HasColumnType("smallint")
                        .HasColumnName("access_level");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("department");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("last_name");

                    b.HasKey("StaffId")
                        .HasName("staff_pkey");

                    b.ToTable("staff", "deanary");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Status", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeId"));

                    b.Property<string>("StatusType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("status_type");

                    b.HasKey("TypeId")
                        .HasName("statuses_pkey");

                    b.ToTable("statuses", "deanary");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Status1", b =>
                {
                    b.Property<DateOnly>("DateOfAssignment")
                        .HasColumnType("date")
                        .HasColumnName("date_of_assignment");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("integer")
                        .HasColumnName("equipment_id");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("TypeId");

                    b.ToTable("status", "deanary");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Contactphone", b =>
                {
                    b.HasOne("DeanarySoft.DataLayer.Staff", "Staff")
                        .WithMany("Contactphones")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("contactphones_staff_id_fkey");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Equipment", b =>
                {
                    b.HasOne("DeanarySoft.DataLayer.Model", "Model")
                        .WithMany("Equipment")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("equipment_model_id_fkey");

                    b.Navigation("Model");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Request", b =>
                {
                    b.HasOne("DeanarySoft.DataLayer.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("requests_equipment_id_fkey");

                    b.HasOne("DeanarySoft.DataLayer.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("requests_staff_id_fkey");

                    b.Navigation("Equipment");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Status1", b =>
                {
                    b.HasOne("DeanarySoft.DataLayer.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("status_equipment_id_fkey");

                    b.HasOne("DeanarySoft.DataLayer.Status", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("status_type_id_fkey");

                    b.Navigation("Equipment");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Model", b =>
                {
                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("DeanarySoft.DataLayer.Staff", b =>
                {
                    b.Navigation("Contactphones");
                });
#pragma warning restore 612, 618
        }
    }
}
